//https://leetcode.com/problems/kth-largest-element-in-an-array/description/

class Solution {
    public int findKthLargest(int[] nums, int k) {
        // Arrays.sort(nums);
        // return nums[nums.length-k];  //short-cut method

        //OPTIMAL SOLUTION
        // PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        // for(int i=0; i<k; i++){
        //     pq.add(nums[i]);
        // }
        // for(int j=1; j<=k; j++){
        //     if(j<k){
        //         pq.poll();
        //     } else if(j==k){
        //         return pq.poll();
        //     }
        // }
        // return 0;

        //ONE MORE APPROCH

        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for(int i=0; i<k; i++){
            pq.add(nums[i]);
        }
        for(int j=k; j<nums.length; j++){
            if(pq.peek()<nums[j]){
                pq.poll();
                pq.add(nums[j]);
            }
        }
        return pq.peek();
    }
}
